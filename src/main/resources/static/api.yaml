swagger: "2.0"
info:
  description: Backend 개발 연수 - 게시판 CRUD API | 엄재웅
  version: v1.0.1
  title: Board_service API
  contact:
    email: jw.eom@alticast.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /board-service/v1.0

tags:
  - name: Posts
    description: Post management
schemes:
  - https
  - http
paths:
  /posts:
    # 게시글 목록 조회
    get:
      tags:
        - Posts
      summary: 게시글 목록 조회
      description: |
        ## 게시글을 게시된 시간 순서로 조회한다.
        ### offset과 count를 기반으로 글 목록을 제공한다. (필수 입력 항목)
          - offset: 글 목록의 크기
          - count: offset의 순서
          - __ex) offset = 10, count = 2 -> 10개씩의 게시글 중 2번째__

        ### 검색 조건을 이용하여 글 검색이 가능.
          - Query :{대상필드}%{검색 조건}?{값}
          - ,(쉼표)로 Query를 연결할 수 있다.
          - __ex)__
            - title%like?밥
            - author%in?작성자1,작성자2\n
            - title%like?제목,content%ne?null
            -검색 조건
              - eq  : value와 일치
              - ne  : value와 일치하지 않음
              - lt  : value보다 작음
              - le  : value보다 작거나 같음
              - gt  : value보다 큼
              - ge  : value보다 크거나 같음
              - in  : value가 포함되었는지의 여부(복수 가능)
              - nin : value가 포함되지 않았는지의 여부(복수 가능)
              - like: value와 일부가 일치함
      #end description
      operationId: getPosts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: offset
          in: query
          description: page offset
          required: true
          type: integer
          format: int32
          default: 10
        - name: count
          in: query
          description: offset count
          required: true
          type: integer
          format: int32
          default: 1
        - name: q
          in: query
          description: 검색 조건 - 조건 설정은 위의 설명 참조
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              message:
                type: string
                example: OK
              result:
                $ref: '#/definitions/ResponseGetPosts'
        400:
          description: "Invalid Querystring Request\n - 4001: Offset 값이 잘못된 경우(Offset value is missing or invalid) \n - 4002: count 값이 잘못된 경우(Count value is missing or invalid) \n - 4003: q값이 잘못된 경우(q doesn't match condition)"
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

    # 게시글 등록
    post:
      tags:
        - Posts
      summary: 게시글 등록
      description: |
        게시글을 등록한다.

        - 노출 시간은 옵션으로 등록이 가능하다.
        - 노출 시간을 등록할 시 해당 시간 이후로 글이 노출됨.

        - 카테고리 목록
          - C001 : 공지사항
          - C002 : 자유 게시판
          - C003 : QnA
      #end description
      operationId: createPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: 작성된 글 정보
          required: true
          schema:
            $ref: '#/definitions/RequestCreatePost'
      responses:
        200:
          description: operation success
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              message:
                type: string
                example: post created
              result:
                type: object
                properties:
                  postId:
                    type: integer
        400:
          description: "Invalid Querystring Request\n - 4004: 값이 비어있거나 잘못 된 경우(Invalid value) \n - 4005: 노출 시간이 등록 시점보다 이전일 때(Incorrect exposure time)"
          schema:
            $ref: '#/definitions/Error'
        405:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

  /posts/{postId}/traces:
    # 게시글 수정이력 조회
    get:
      tags:
        - Posts
      summary: 게시글 수정이력 조회
      description: |
        ## 게시글의 수정이력을 조회한다.

        ### offset과 count를 기반으로 수정 이력 목록을 제공한다. (필수 입력 항목)
          - offset: 글 목록의 크기
          - count: offset의 순서
          - __ex) offset = 10, count = 2 -> 10개씩의 게시글 중 2번째__

        ### startDate, endDate를 이용해 시작일, 마감일, 기간으로 검색 가능.
        - startDate: 검색할 시작일
        - endDate: 검색할 마감일
        - __ex)__
          - 2021-10-14 11:03:11 ~
          - ~ 2021-11-21 09:01:10
          - 2021-09-08 10:12:45 ~ 2021-10-25 16:00:34

        ### 검색 조건을 이용하여 수정 이력 검색이 가능.
          - Query :{대상필드}%{검색 조건}?{값}
          - ,(쉼표)로 Query를 연결할 수 있다.
          - __ex)__
            - title%like?밥
            - author%in?작성자1,작성자2\n
            - title%like?제목,content%ne?null
            -검색 조건
              - eq  : value와 일치
              - ne  : value와 일치하지 않음
              - lt  : value보다 작음
              - le  : value보다 작거나 같음
              - gt  : value보다 큼
              - ge  : value보다 크거나 같음
              - in  : value가 포함되었는지의 여부(복수 가능)
              - nin : value가 포함되지 않았는지의 여부(복수 가능)
              - like: value와 일부가 일치함

      # end description
      operationId: getPostTraces
      produces:
        - application/json
      parameters:
        - name: postId
          in: path
          description: 게시글 번호
          required: true
          type: integer
          format: int64
        - name: offset
          in: query
          description: page offset
          required: true
          type: integer
          format: int32
          default: 1
        - name: count
          in: query
          description: offset count
          required: true
          type: integer
          format: int32
          default: 1
        - name: q
          in: query
          description: 검색 조건 - 조건 설정은 위의 설명 참조
          type: string
        - name: startDate
          in: query
          description: 기간 설정 시작일
          type: integer
        - name: endDate
          in: query
          description: 기간 설정 마감일
          type: integer
      responses:
        200:
          description: operation success
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
                example: OK
              result:
                $ref: '#/definitions/ResponseGetTraces'
        400:
          description: "Invalid Querystring Request\n - 4001: Offset 값이 잘못된 경우(Offset value is missing or invalid) \n - 4002: count 값이 잘못된 경우(Count value is missing or invalid) \n - 4003: q값이 잘못된 경우(q doesn't match condition)\n - 4010: 시작기간이 미래, 마감기간이 시작기간보다 과거일 때(Invalid date)"
          schema:
            $ref: '#/definitions/Error'
        405:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

  /posts/{postId}/traces/{version}:
    # 게시글 수정이력 상세 조회
    get:
      tags:
        - Posts
      summary: 게시글 수정이력 상세 조회
      description: |
        게시글의 수정이력 상세사항을 조회한다.
        - id: 게시글 id
        - idx: 수정 이력 버전
      # end description
      operationId: getPostTrace
      produces:
        - application/json
      parameters:
        - name: postId
          in: path
          description: 게시글 번호
          required: true
          type: integer
          format: int64
        - name: version
          in: path
          description: 수정 이력 버전
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: operation success
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
                example: OK
              result:
                $ref: '#/definitions/Trace'
        400:
          description: "No Post or Trace\n - 4009: 존재하지 않는 수정이력 버전일 때(can't find Trace. PostId=2)"
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

  /posts/{postId}:
    parameters:
      - name: postId
        in: path
        description: 게시글 번호
        required: true
        type: integer
        format: int32

    # 게시글 조회
    get:
      tags:
        - Posts
      summary: 게시글 조회
      description: id에 맞는 게시글을 조회한다.
      operationId: getPost
      produces:
        - application/json
      responses:
        200:
          description: operation success
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 200
              message:
                type: string
                example: OK
              result:
                $ref: '#/definitions/Post'
        400:
          description: "No Post\n - 4008: 존재하지 않는 게시물의 ID일 때(Post[postId] dose not exist)"
          schema:
            $ref: '#/definitions/Error'
        404:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

    # 게시글 수정
    patch:
      tags:
        - "Posts"
      summary: "게시글 수정"
      description: |
        게시글을 수정한다.

        - isDeleted값이 true인 글들은 삭제된 글이다.
        - isDeleted값을 false로 바꾸어주면 삭제된 글 복구가 가능하다.
      # end description
      operationId: "updatePost"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "작성된 글 정보"
          required: true
          schema:
            $ref: "#/definitions/RequestUpdatePost"
      responses:
        200:
          description: "operation success"
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              result:
                type: object
                properties:
                  postId:
                    type: integer
                  version:
                    type: integer
            example:
              code: 200
              message: post updated
              result: {
                postId: 3,
                version: 4
              }
        400:
          description: "Invaild value Request\n - 4004: 값이 비어있거나 잘못 된 경우(Invalid value)\n - 4007: 수정된 내용이 없을 때(post[postId] is not modified)\n - 4008: 존재하지 않는 게시물(Post[postId] dose not exist)"
          schema:
            $ref: '#/definitions/Error'
        404:
          description: "No Post"
          schema:
            $ref: '#/definitions/Error'
        405:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

    # 게시글 삭제
    delete:
      tags:
        - Posts
      summary: 게시글 삭제
      description: 게시글을 삭제한다.
      operationId: uploadFile
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              result:
                type: object
                properties:
                  postId:
                    type: integer
            example:
              code: 200
              message: post deleted
              result: {
                postId: 3
              }
        400:
          description: "No Post\n - 4006: 이미 삭제된 글을 다시 삭제하려 할 때(Post[postId] is already deleted)\n - 4008: 존재하지 않는 게시물(Post[postId] dose not exist)"
          schema:
            $ref: '#/definitions/Error'
        405:
          $ref: '#/responses/NoExistMethodError'

        500:
          $ref: '#/responses/InternalError'

definitions:
  ###### Data model
  Post:
    type: object
    description: 게시글
    required:
      - postId
      - category
      - title
      - content
      - author
      - createdAt
    properties:
      postId:
        type: integer
        format: int64
        description: 글 ID
      category:
        type: string
        description: 카테고리(code)
      title:
        type: array
        items:
          $ref: '#/definitions/Title'
      content:
        type: string
        description: 글 내용
      author:
        type: string
        description: 작성자
      createdAt:
        type: string
        format: date-time
        description: 작성 날짜
      showedAt:
        type: string
        format: date-time
        description: 게시 날짜
      delYn:
        type: boolean
        default: false

  Trace:
    type: object
    description: 수정이력
    required:
      - version
      - editor
      - editedAt
    properties:
      version:
        type: integer
        format: int64
        description: 수정된 글의 버전
      title:
        type: array
        items:
          $ref: '#/definitions/Title'
      content:
        type: string
        description: 글 내용(title, content 중 하나는 바뀐 내용이 존재해야 한다)
      editor:
        type: string
        description: 수정자
      editedAt:
        type: string
        format: date-time
        description: 수정 날짜

  ###### Request model
  RequestCreatePost:
    type: object
    description: 게시글 생성시의 요청 목록
    required:
      - category
      - title
      - content
      - author
    properties:
      category:
        type: string
        description: 카테고리
        example: C001
      title:
        type: array
        items:
          $ref: '#/definitions/Title'
        example:
          - lang: ko
            value: 안녕하세요
          - lang: en
            value: Hi
      content:
        type: string
        description: 글 내용
        example: 반갑습니다
      author:
        type: string
        description: 작성자
        example: 작성자
      showedAt:
        type: string
        format: timestamp
        description: 게시 날짜
        example: 1637800725290

  RequestUpdatePost:
    type: object
    description: 게시글 수정시의 필요 목록
    required:
      - author
    properties:
      title:
        type: array
        items:
          $ref: '#/definitions/Title'
        example:
          - lang: ko
            value: 반갑습니다
          - lang: en
            value: Nice to meet you
      content:
        type: string
        description: 글 내용(title, content 중 하나는 바뀐 내용이 존재해야 한다)
        example: 만나서 기쁩니다
      author:
        type: string
        description: 작성자
        example: 작성자2
      delYn:
        type: boolean
        default: false
        description: 글이 삭제되었는지의 여부

  ###### Response model
  ResponseGetPosts:
    type: object
    description: 게시글 목록 조회
    required:
      - total
    properties:
      total:
        type: integer
        description: 총 게시글 갯수
      posts:
        type: array
        description: 게시글들
        items:
          type: object
          properties:
            postId:
              type: integer
              format: int64
              description: 글 ID
            category:
              type: string
              description: 카테고리(code)
            title:
              type: array
              items:
                $ref: '#/definitions/Title'
            author:
              type: string
              description: 작성자
            createdAt:
              type: string
              description: 작성 날짜
            updatedAt:
              type: string
              description: 최종 수정 날짜
            showedAt:
              type: string
              description: 게시 날짜

  ResponseGetTraces:
    type: object
    description: 수정이력 목록 조회
    required:
      - postId
      - total
    properties:
      postId:
        type: integer
        description: 글 ID
      total:
        type: integer
        description: 총 수정이력 갯수
      traces:
        type: array
        description: 수정이력들
        items:
          type: object
          properties:
            version:
              type: integer
              format: int64
              description: 수정된 글의 버전
            title:
              type: array
              items:
                $ref: '#/definitions/Title'
            content:
              type: string
              description: 글 내용(title, content 중 하나는 바뀐 내용이 존재해야 한다)
            editor:
              type: string
              description: 수정자
            editedAt:
              type: string
              format: date-time
              description: 수정 날짜

  ###### Code
  Category:
    type: object
    description: "카테고리\n - C001: 공지사항\n - C002: 자유 게시판\n - C003: QnA"
    properties:
      code:
        type: string
        description: 카테고리 코드
      category:
        type: string
        description: 카테고리 문자열

  Title:
    type: object
    description: 글의 제목
    properties:
      lang:
        type: string
        description: 언어
      value:
        type: string
        description: 제목

  ###### Error
  Error:
    type: object
    description: "에러 Code\n - 4001: Offset 또는 count가 맞지않거나 누락, 범위를 벗어날 때(Offset or count dose not match) \n - 4002: 쿼리에 오류가 있을 때(Query does not meet the condition) \n - 4003: 맞지 않는 method 요청(A method request that does not exist) \n  - 4004: 값들이 비어있거나, 카테고리가 맞지 않는 경우(Invalid value) \n - 4005: 노출 시간이 등록 시점보다 이전일 때(Incorrect exposure time)\n - 4006: 시작기간이 미래, 마감기간이 과거, 마감기간이 시작기간보다 과거일 때(Wrong date input)\n - 4007: 존재하지 않는 게시물의 ID일 때(This post does not exist)"
    properties:
      code:
        type: integer
        description: 에러 코드
      message:
        type: string
        description: 에러 메세지

###### Error Response
responses:
  NoExistMethodError:
    description: "Not Found"

  InternalError:
    description: "internal server error\n - 서버 내부 오류"
    schema:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string

externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io